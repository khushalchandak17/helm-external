fullnameOverride: datadog

datadog:
  # Agent API key
  apiKeyExistingSecret: datadog-keys
  # APP key required for metrics
  appKeyExistingSecret: datadog-keys

  # ref. https://docs.datadoghq.com/getting_started/site
  #  site: datadoghq.eu

  # Set logging verbosity, valid log levels are: trace, debug, info, warn, error, critical, off
  logLevel: WARN

  # ref. https://github.com/DataDog/docker-dd-agent#tracing-from-the-host
  apm:
    # .Values.datadog.apm.enabled=true required to enable tracing port 8126 in datadog.datadog-system.svc.cluster.local
    enabled: true
    socketEnabled: true

  # Monitor Helm deployments
  helmCheck:
    enabled: true
    collectEvents: true

  # Logs collection
  logs:
    enabled: true
    containerCollectAll: true
    containerCollectUsingFiles: true

  # Network Performance Monitoring
  networkMonitoring:
    enabled: true

  # Process Collection
  processAgent:
    enabled: true
    processCollection: true

  # ref. https://docs.datadoghq.com/agent/kubernetes/prometheus/
  prometheusScrape:
    enabled: false
    serviceEndpoints: false
  # send select labels from namespace as labels
  namespaceLabelsAsTags:
    xcr_segment_name: segment
    xcr_team_name: team
    xcr_product_name: product
    xcr_env_name: env_name
    xcr_env: env

  # See https://www.datadoghq.com/blog/universal-service-monitoring-datadog
  serviceMonitoring:
    enabled: true

  securityAgent:
    # Cloud Security Posture Management (CSPM)
    compliance:
      enabled: true
    # Cloud Workload Security (CWS)
    runtime:
      enabled: true
      # Collection of CWS network events
      network:
        enabled: true
  
  ## https://help.datadoghq.com/hc/en-us/requests/1141411
  ## To enable namespace and pod labels to all kubernetes_state.* metrics.
  ## Upgrade is need for datadog to version 7.44.0 release.
  # kubeStateMetricsCore:
  #   labelsAsTags:
  #     namespace:
  #       xcr_segment_name: segment
  #       xcr_team_name: team
  #       xcr_product_name: product
  #       xcr_env_name: env_name
  #       xcr_env: env
  #     pod:
  #       xcr_service: service
  #       xcr_service_version: version

clusterAgent:
  image:
    pullPolicy: Always
  replicas: 2
  priorityClassName: system-cluster-critical
  createPodDisruptionBudget: true
  podAnnotations:
    sidecar.istio.io/inject: "false"

  # Enable the metricsProvider to be able to scale based on metrics in Datadog
  metricsProvider:
    enabled: false
    #will install DatadogMetrics CRD
    useDatadogMetrics: false
  admissionController:
    mutateUnlabelled: false

agents:
  image:
    pullPolicy: Always
  podAnnotations:
    sidecar.istio.io/inject: "false"
  tolerations:
    - key: "dedicated"
      operator: Exists
      effect: NoSchedule

