fullnameOverride: datadog

datadog:
  # Agent API key
  apiKeyExistingSecret: datadog-keys
  # APP key required for metrics
  appKeyExistingSecret: datadog-keys

  # ref. https://docs.datadoghq.com/getting_started/site
  #  site: datadoghq.eu

  # Set logging verbosity, valid log levels are: trace, debug, info, warn, error, critical, off
  logLevel: WARN

  # ref. https://github.com/DataDog/docker-dd-agent#tracing-from-the-host
  apm:
    # .Values.datadog.apm.enabled=true required to enable tracing port 8126 in datadog.datadog-system.svc.cluster.local
    enabled: true
    socketEnabled: true

  # Monitor Helm deployments
  helmCheck:
    enabled: true
    collectEvents: true

  # kubelet TLS verification for on-prem RKE
  kubelet:
    tlsVerify: false

  # Logs collection
  logs:
    enabled: true
    containerCollectAll: true
    containerCollectUsingFiles: true

  # Network Performance Monitoring - requires eBPF
  networkMonitoring:
    enabled: false

  # Process Collection
  processAgent:
    enabled: true
    processCollection: true
  systemProbe:
    enableTCPQueueLength: false
    enableOOMKill: false
    collectDNSStats: false

  # ref. https://docs.datadoghq.com/agent/kubernetes/prometheus/
  prometheusScrape:
    enabled: false
    serviceEndpoints: false
  # send select labels from namespace as labels
  namespaceLabelsAsTags:
    xcr_segment_name: segment
    xcr_team_name: team
    xcr_product_name: product
    xcr_env_name: env_name
    xcr_env: env
  podLabelsAsTags:
    xcr_service: service
    xcr_service_version: version
  #podAnnotationsAsTags:
  #  xcr_deploy_env: env
  #  xcr_deploy_service: service
  #  xcr_deploy_service_version: version

# See https://www.datadoghq.com/blog/universal-service-monitoring-datadog
  #serviceMonitoring:
  #  enabled: true

# See https://docs.datadoghq.com/infrastructure/list/#agent-configuration for more information.
  #inventories_configuration_enabled: true
  #env:
  #  - name: DD_INVENTORIES_CONFIGURATION_ENABLED
  #    value: true

clusterAgent:
  image:
    pullPolicy: Always
  replicas: 2
  priorityClassName: system-cluster-critical
  createPodDisruptionBudget: true
  podAnnotations:
    sidecar.istio.io/inject: "false"

  # Enable the metricsProvider to be able to scale based on metrics in Datadog
  metricsProvider:
    enabled: false
    #will install DatadogMetrics CRD
    useDatadogMetrics: false

agents:
  image:
    pullPolicy: Always
  podAnnotations:
    sidecar.istio.io/inject: "false"
  volumes:
    - hostPath:
        path: /etc/kubernetes/ssl
      name: etcd-certs
  volumeMounts:
    - name: etcd-certs
      mountPath: /etc/kubernetes/ssl
      readOnly: true
  tolerations:
    - key: node-role.kubernetes.io/controlplane
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/etcd
      operator: Exists
      effect: NoExecute
  containers:
    agent:
      # agents.containers.agent.env -- Additional environment variables for the agent container
      env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
